@use "sass:color";
@use "sass:math";

@use "_colors";
@use "_mixins";
@use "_variables";
@use "typography";

/* HTML input element styling */

.padded-label {
    margin: variables.$spacing-small 0;
}

input {
    background-color: colors.$color-form-background;
    color: #bfbfbf;
    border: none;
    font-size: 100%;
    padding: variables.$spacing-small variables.$spacing-medium;
    margin-right: variables.$spacing-small;
    @include mixins.boxSize();
    @include typography.toolFont();
}

input[type=range] {
    padding: variables.$spacing-xsmall variables.$spacing-small;
}

.vertical {
    transform: rotate(90deg);

    &.invert {
        transform: rotate(-90deg);
    }
}

button {
    @include mixins.button();
}

fieldset {
    legend {
        color: colors.$color-1;
        @include typography.toolFont();
    }
    border: 1px solid grey;
    border-radius: variables.$spacing-small;
    padding: variables.$spacing-medium variables.$spacing-large;
    margin-bottom: variables.$spacing-medium;
    @include mixins.boxSize;
}

/* specific for range elements, taken from Daniel Sterns post on css-tricks */

$track-color: #333;
$thumb-color: colors.$color-1;
$thumb-color-disabled: #666;

$thumb-radius: 50%;
$thumb-height: variables.$spacing-medium;
$thumb-width: variables.$spacing-medium;
$mobile-thumb-height: 40px;
$mobile-thumb-width: 40px;
$thumb-shadow-size: 1px;
$thumb-shadow-blur: 2px;
$thumb-shadow-color: #111;
$thumb-border-width: 2px;
$thumb-border-color: color.scale(colors.$color-1, $lightness: -5%);

$track-width: 100%;
$track-height: variables.$spacing-medium;
$track-shadow-size: 0;
$track-shadow-blur: 2px;
$track-shadow-color: #000;
$track-border-width: 1px;
$track-border-color: #000;

$track-radius: 5px;
$contrast: 5%;

@mixin shadow($shadow-size, $shadow-blur, $shadow-color) {
    box-shadow: $shadow-size $shadow-size $shadow-blur $shadow-color, 0 0 $shadow-size color.scale($shadow-color, $lightness: 5%);
}

@mixin track() {
    width: $track-width;
    height: $track-height;
    cursor: pointer;
}

@mixin thumb() {
    @include shadow($thumb-shadow-size, $thumb-shadow-blur, $thumb-shadow-color);
    border: $thumb-border-width solid $thumb-border-color;
    height: $thumb-height;
    width: $thumb-width;
    border-radius: $thumb-radius;
    background: $thumb-color;
    cursor: pointer;
}

input[type=range] {
    -webkit-appearance: none;
    margin: math.div( $thumb-height, 2 ) 0;
    width: $track-width;
    background-color: transparent;

    &:focus {
        outline: none;
    }

    &::-webkit-slider-runnable-track {
        @include track;
        @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
        background: $track-color;
        border-radius: $track-radius;
        border: $track-border-width solid $track-border-color;
    }

    &::-webkit-slider-thumb {
        @include thumb;
        -webkit-appearance: none;
        margin-top: math.div( -$track-border-width * 2 + $track-height, 2 ) - math.div( $thumb-height, 2 );
    }

    &:focus::-webkit-slider-runnable-track {
        background: color.scale($track-color, $lightness: $contrast);
    }

    &::-moz-range-track {
        @include track;
        @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
        background: $track-color;
        border-radius: $track-radius;
        border: $track-border-width solid $track-border-color;
    }
    &::-moz-range-thumb {
        @include thumb;;
    }

    &::-ms-track {
        @include track;
        background: transparent;
        border-color: transparent;
        border-width: $thumb-width 0;
        color: transparent;
    }

    &::-ms-fill-lower {
        background: color.scale($track-color, $lightness: -$contrast);
        border: $track-border-width solid $track-border-color;
        border-radius: $track-radius*2;
        @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
    }
    &::-ms-fill-upper {
        background: $track-color;
        border: $track-border-width solid $track-border-color;
        border-radius: $track-radius*2;
        @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
    }
    &::-ms-thumb {
        @include thumb;;
    }
    &:focus::-ms-fill-lower {
        background: $track-color;
    }
    &:focus::-ms-fill-upper {
        background: color.scale($track-color, $lightness: $contrast);
    }

    // disabled state

    &:disabled {
        &::-webkit-slider-thumb {
            background: $thumb-color-disabled;
            border-color: $thumb-color-disabled;
        }
        &::-moz-range-thumb {
            background: $thumb-color-disabled;
            border-color: $thumb-color-disabled;
        }
        &::-ms-thumb {
            background: $thumb-color-disabled;
            border-color: $thumb-color-disabled;
        }
    }
}

@include mixins.mobile() {
    input[type=range] {
        &::-webkit-slider-thumb {
            width: $mobile-thumb-width;
            height: $mobile-thumb-height;
            margin-top: math.div( -$track-border-width * 2 + $track-height, 2 ) - math.div( $mobile-thumb-height, 2 );
            transform: scale(.5);
        }
    }
}
